---
apiVersion: v1
kind: Deployment
metadata:
  name: java-17-dp-hello-world
  namespace: java
spec:
  replicas: 1
  selector:
    matchLabels:
      app: java-17-hello-world
  template:
    metadata:
      labels:
        app: java-17-hello-world
    spec:
      containers:
        - name: java
          image: openjdk:17
          resources:
            # requests:
            #   memory: "1024Mi"
            #   cpu: "2"
            limits:
              memory: "2048Mi"
              cpu: "500m"
          command: ["java"]
          args:
            # Identify and Fix memory leaks
            # java -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/path/to/dumps -jar your-app.jar
            # Optimize JVM settings for frequent Garbage collections
            # java -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -jar your-app.jar
            - -XX:NativeMemoryTracking=detail
            - -XX:+UseContainerSupport
            - -Xmx2048m
            - /code/Main.java
          volumeMounts:
            - name: java-code
              mountPath: "/code"
      volumes:
        - name: java-code-hello-world
          configMap:
            name: java-code-hello-world
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: java-code-hello-world
  namespace: java
data:
  Main.java: |-
    public class Main {
      public static void main(String[] args) {
        System.out.println("Hello World");
        try {
            Thread.currentThread().join();
        } catch(Exception e) {
            System.out.println(e);
        }
      }
    }
