---
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-largememorymappingfile
  namespace: java
  labels:
    app: java-largememorymappingfile
spec:
  selector:
    matchLabels:
      app: java-largememorymappingfile
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: java-largememorymappingfile
      labels:
        app: java-largememorymappingfile
    spec:
      # initContainers:
      # Init containers are exactly like regular containers, except:
      # - Init containers always run to completion.
      # - Each init container must complete successfully before the next one starts.
      restartPolicy: Always
      containers:
        - name: java-largememorymappingfile
          image: ${IMAGE}
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            # limits:
            #   cpu: 100m
            #   memory: 100Mi
          # env:
          #   - name: DB_HOST
          #     valueFrom:
          #       configMapKeyRef:
          #         name: myjob
          #         key: DB_HOST
          volumeMounts:
            - mountPath: /tmp/async-profiler
              name: async-profiler
              readOnly: true
      # volume mount for async-profiler
      # On host
      # https://github.com/async-profiler/async-profiler/issues/455
      # wget https://github.com/async-profiler/async-profiler/releases/download/v3.0/async-profiler-3.0-linux-x64.tar.gz
      # mv async-profiler-3.0-linux-x64 /tmp/async-profiler
      volumes:
        - name: async-profiler
          hostPath:
            path: /tmp/async-profiler  # directory location on host
            type: Directory  # this field is optional
