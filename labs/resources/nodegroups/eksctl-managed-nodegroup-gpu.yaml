---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: ${EKS_CLUSTER_NAME}
  version: "${CLUSTER_VERSION}"
  region: ${EKS_CLUSTER_REGION}
  tags:
    auto-delete: "no"
    auto-stop: "no"
managedNodeGroups:
  - name: managed-nodegroup-${NODEGROUP_CONFIG}-${INSTANCE_TYPE}
    # Required using the command to check if the instance type supported in AZs:
    # $ aws ec2 describe-instance-type-offerings --location-type availability-zone  --filters Name=instance-type,Values=g4dn.2xlarge --region us-east-1 --output table
    # Or will get error on CFN:
    # "ResourceStatusReason": "Properties validation failed for resource ManagedNodeGroup with message:\n#: required key [Subnets] not found",
    instanceType: ${NODEGROUP_SIZE}
    desiredCapacity: 1
    amiFamily: AmazonLinux2
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        # (Optional) Only required if you need "EC2 Instance Connect"
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        # (Optional) Only required if you are using "SSM"
        - arn:aws:iam::aws:policy/AmazonSSMPatchAssociation
        # (Optional) Only required if you have "Amazon CloudWatch Observability" setup
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
    ssh:
      allow: false
    tags:
      auto-delete: 'no'
      auto-stop: 'no'
      k8s.io/cluster-autoscaler/${EKS_CLUSTER_NAME}: 'owned'
      k8s.io/cluster-autoscaler/enabled: 'true'
